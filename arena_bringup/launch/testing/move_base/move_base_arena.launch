<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- <arg name="speed" default="0.22"/> -->
    <arg name="model" default="burger" />
    <arg name="cmd_vel_topic" default="cmd_vel"/>
    <arg name="odom_topic" default="odom"/>
    <arg name="namespace" />
    <param name="bool_goal_reached" value="true" />

    <!-- move_base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find arena-simulation-setup)/robot/$(arg model)/costmaps/local_costmap_params.yaml" command="load" />
        <rosparam file="$(find arena-simulation-setup)/robot/$(arg model)/costmaps/global_costmap_params.yaml" command="load" />

        <remap from="cmd_vel" to="foo" />
        <param name="planner_frequency" value="0.0" />

    </node>

    <!-- observation_packer -->
    <node pkg="observations" name="observation_packer" type="observation_packer" output="screen"/>

    <!-- Launch neural net ros wrapper -->
    <node pkg="arena-ros" type="play_agent.py" name="arena_node" output="screen"/>
    <!-- <node pkg="arena-ros" type="arena_node_tb3.py" name="arena_node" output="screen" /> -->
    <!-- spacial_horizon -->
    <node pkg="spacial_horizon" type="spacial_horizon_node" name="spacial_horizon_node" output="screen">
        <rosparam file="$(find arena-simulation-setup)/robot/$(arg model)/costmaps/plan_fsm_param.yaml" command="load" />
        <remap from="$(arg namespace)/goal" to="$(arg namespace)/move_base_simple/goal" />
        <remap from="/move_base/NavfnROS/make_plan" to="$(arg namespace)/move_base/NavfnROS/make_plan" />
    </node>
</launch>
